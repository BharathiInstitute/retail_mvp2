
rules_version = '2';
service cloud.firestore {
  match /databases/{db}/documents {

    // ===== Helpers =====
    function isSignedIn() { return request.auth != null; }
    // Owner has full permissions everywhere via custom claim: role = 'owner'
    function isOwner() {
      return isSignedIn() && (
        request.auth.token.role == 'owner' ||
        (get(/databases/$(db)/documents/users/$(request.auth.uid)).data.role == 'owner')
      );
    }

    // Read the caller's permission document. Missing doc -> empty map.
    function _permDoc() {
      return isSignedIn() ? get(/databases/$(db)/documents/user_permissions/$(request.auth.uid)).data : {};
    }
    // Check if the caller has a specific action on a screenKey.
    // Missing keys evaluate to null != true => false.
    function hasPerm(screen, action) {
      return isSignedIn() && _permDoc().modules[screen][action] == true;
    }

    // ===== Admin & permissions management =====
    match /users/{uid} {
      allow get, list: if hasPerm('admin.main','view') || isOwner();
      allow create: if hasPerm('admin.main','create') || isOwner();
      allow update: if hasPerm('admin.main','edit') || isOwner();
      allow delete: if hasPerm('admin.main','delete') || isOwner();
    }
    match /user_permissions/{uid} {
      // Allow a user to read their own permissions for realtime UI.
      allow get: if isSignedIn() && (request.auth.uid == uid || hasPerm('admin.main','view') || isOwner());
      allow list: if hasPerm('admin.main','view') || isOwner();
      // Only Admin (edit) or Owner can write permissions.
      allow create, update, delete: if hasPerm('admin.main','edit') || isOwner();
    }

    // Optional: security settings document for recovery (owner can fully manage)
    // POS needs read access to loyalty_config without admin perms. Add a specific rule before the generic catch.
    match /settings/loyalty_config {
      // Allow POS view to read loyalty settings; also loyalty.settings view may read.
      allow get, list: if hasPerm('pos.main','view') || hasPerm('loyalty.settings','view') || isOwner();
      // Writes remain restricted to Admin or Owner via the generic /settings/{id} rules below.
      allow create, update, delete: if hasPerm('admin.main','edit') || isOwner();
    }
    match /settings/{id} {
      allow get, list: if hasPerm('admin.main','view') || isOwner();
      allow create, update, delete: if hasPerm('admin.main','edit') || isOwner();
    }

    // ===== Inventory =====
    match /inventory/{doc} {
      // Module-level reads for dashboards and accounting without needing inventory permission explicitly
      allow get, list: if hasPerm('inventory.products','view') || hasPerm('dashboard','view') || hasPerm('accounting.main','view') || hasPerm('pos.main','view') || isOwner();
      allow create: if hasPerm('inventory.products','create') || isOwner();
      allow update: if hasPerm('inventory.products','edit') || isOwner();
      allow delete: if hasPerm('inventory.products','delete') || isOwner();
    }
    match /stock_movements/{doc} {
      allow get, list: if hasPerm('inventory.stock-movements','view') || isOwner();
      allow create: if hasPerm('inventory.stock-movements','create') || isOwner();
      allow update: if hasPerm('inventory.stock-movements','edit') || isOwner();
      allow delete: if hasPerm('inventory.stock-movements','delete') || isOwner();
    }
    match /transfers/{doc} {
      allow get, list: if hasPerm('inventory.transfers','view') || isOwner();
      allow create: if hasPerm('inventory.transfers','create') || isOwner();
      allow update: if hasPerm('inventory.transfers','edit') || isOwner();
      allow delete: if hasPerm('inventory.transfers','delete') || isOwner();
    }
    match /suppliers/{doc} {
      allow get, list: if hasPerm('inventory.suppliers','view') || isOwner();
      allow create: if hasPerm('inventory.suppliers','create') || isOwner();
      allow update: if hasPerm('inventory.suppliers','edit') || isOwner();
      allow delete: if hasPerm('inventory.suppliers','delete') || isOwner();
    }
    match /alerts/{doc} {
      allow get, list: if hasPerm('inventory.alerts','view') || isOwner();
      allow create: if hasPerm('inventory.alerts','create') || isOwner();
      allow update: if hasPerm('inventory.alerts','edit') || isOwner();
      allow delete: if hasPerm('inventory.alerts','delete') || isOwner();
    }
    match /audit/{doc} {
      allow get, list: if hasPerm('inventory.audit','view') || isOwner();
      allow create: if hasPerm('inventory.audit','create') || isOwner();
      allow update: if hasPerm('inventory.audit','edit') || isOwner();
      allow delete: if hasPerm('inventory.audit','delete') || isOwner();
    }

    // ===== Invoices =====
    match /invoices/{invoiceId} {
      function _isSales() {
        return (resource != null && resource.data.type == 'sale') || (request.resource != null && request.resource.data.type == 'sale');
      }
      function _isPurchase() {
        return (resource != null && resource.data.type == 'purchase') || (request.resource != null && request.resource.data.type == 'purchase');
      }
      // Reads are allowed for modules that need them without requiring invoices.*
      allow get, list: if hasPerm('dashboard','view') || hasPerm('accounting.main','view') || hasPerm('pos.main','view') ||
                        (_isSales() && hasPerm('invoices.sales','view')) ||
                        (_isPurchase() && hasPerm('invoices.purchases','view')) ||
                        isOwner();
      // POS can create sales invoices without requiring invoices.sales permission
      allow create: if hasPerm('pos.main','create') ||
                     (_isSales() && hasPerm('invoices.sales','create')) ||
                     (_isPurchase() && hasPerm('invoices.purchases','create')) ||
                     isOwner();
      // Updates/deletes reserved for Invoices module or Owner
      allow update: if (_isSales() && hasPerm('invoices.sales','edit')) ||
                     (_isPurchase() && hasPerm('invoices.purchases','edit')) ||
                     isOwner();
      allow delete: if (_isSales() && hasPerm('invoices.sales','delete')) ||
                     (_isPurchase() && hasPerm('invoices.purchases','delete')) ||
                     isOwner();
    }

    // Explicit purchase invoices collection used by Accounting/Dashboard
    match /purchase_invoices/{invoiceId} {
      allow get, list: if hasPerm('dashboard','view') || hasPerm('accounting.main','view') || hasPerm('invoices.purchases','view') || isOwner();
      allow create: if hasPerm('invoices.purchases','create') || isOwner();
      allow update: if hasPerm('invoices.purchases','edit') || isOwner();
      allow delete: if hasPerm('invoices.purchases','delete') || isOwner();
    }

    // ===== CRM =====
    match /customers/{doc} {
      // POS may read customers; also create/update for loyalty and quick-create
      allow get, list: if hasPerm('crm.main','view') || hasPerm('pos.main','view') || isOwner();
      allow create: if hasPerm('crm.main','create') || hasPerm('pos.main','create') || isOwner();
      allow update: if hasPerm('crm.main','edit') || hasPerm('pos.main','edit') || isOwner();
      allow delete: if hasPerm('crm.main','delete') || isOwner();

      // Nested credit ledger (if present)
      match /credit_ledger/{entry} {
        allow get, list: if hasPerm('crm.main','view') || hasPerm('pos.main','view') || isOwner();
        allow create: if hasPerm('crm.main','create') || hasPerm('pos.main','create') || isOwner();
        allow update, delete: if hasPerm('crm.main','edit') || hasPerm('pos.main','edit') || isOwner();
      }
    }

    // ===== Accounting (view-only) =====
    match /accounting/{doc} {
      allow get, list: if hasPerm('accounting.main','view') || isOwner();
      allow create, update, delete: if false;
    }

    // ===== Loyalty =====
    match /loyalty/{doc} {
      allow get, list: if hasPerm('loyalty.main','view') || isOwner();
      allow create: if hasPerm('loyalty.main','create') || isOwner();
      allow update: if hasPerm('loyalty.main','edit') || isOwner();
      allow delete: if hasPerm('loyalty.main','delete') || isOwner();
    }
    match /loyalty_settings/{doc} {
      allow get, list: if hasPerm('loyalty.settings','view') || isOwner();
      allow create: if hasPerm('loyalty.settings','create') || isOwner();
      allow update: if hasPerm('loyalty.settings','edit') || isOwner();
      allow delete: if hasPerm('loyalty.settings','delete') || isOwner();
    }

    // ===== Catch-all: Owner full access =====
    match /{document=**} {
      allow read, write: if isOwner();
    }
  }
}


